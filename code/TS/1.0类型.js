//类型安全：强弱类型的区别：是否允许随意的类型转换
//类型检查：静态类型动态类型：变量声明之后是否能后改变，
       // 静态类型：定义四就能确认变量类型，且不能再进行改变
       // 动态类型：运行时才能确认变量类型，且可以随意转换
//js是一门弱类型，动态类型的语言
    //弱类型的问题：
        let obj ={};
        obj.foo()//1.异常必须运行时才报错，强类型会直接报错

        function sum (x, y) {//2.类型不确定会导致得不到预期结果，传入数字或者字符串会有完全不同的输出
            return x + y;
        }

        let obj = {};
        obj[true] = 1;
        console.log(obj['true']) //1
    //强类型的优势：
        //1.编码阶段可以消灭大部分异常
        //2.代码更加智能，智能提示更加完善，编码更准确
        //3.重构更加牢靠
        //4.减少不必要的类型判断